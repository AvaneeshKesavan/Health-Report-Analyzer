name: CI
on: [push,pull_request]
jobs:
  Backend:
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo:6 # Specify the desired MongoDB version
        ports:
          - 27017:27017 # Expose the default MongoDB port
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand({ ping: 1 })'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    env:
    
      MONGODB_URI: mongodb://mongo:27017/testdb
      PORT: 5001
      NODE_ENV: development
      JWT_SECRET: your-secure-random-string
      SESSION_EXPIRE: 7d
      FRONTEND_URL: http://localhost:3000
      EMAIL_USER: your-email@gmail.com
      EMAIL_PASS: your-app-password
    steps:
      -  name: Checkout
         uses: actions/checkout@v5.0.0
         with:
           path: .
      - name: Setup Node
        uses: actions/setup-node@v5.0.0
      - name: Install Dependencies and Run
        run: |
          cd server
          npm install
          npm run dev > server.log 2>&1 &
          server_pid=$!
          echo "Server started with PID: $server_pid"
          
          for i in {1..15}; do
            if nc -z localhost $PORT > /dev/null; then
              echo "Server is up!"
              kill $server_pid
              echo "No issues found!"
              exit 0
            fi
            echo "Waiting for server... (attempt $i/15)"
            sleep 2
          done
          
          echo "Server failed to start. Printing logs:"
          cat server.log
          kill $server_pid
          exit 1
  Frontend:
    runs-on: ubuntu-latest
    steps:
      -  name: Checkout
         uses: actions/checkout@v5.0.0
         with:
           path: .
      - name: Setup Node
        uses: actions/setup-node@v5.0.0
      - name: Install Dependencies and Run
        run: |
          cd client
          npm install
          npm run build     
          
